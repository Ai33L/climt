os: linux
dist: trusty
sudo: required
services: docker
language: python
python: 3.6

  #branches:
  #    except:
  #    - sympl-0.4.0

cache:
    - pip
    - directories: ~/build/CliMT/climt/climt/_lib/Linux
env:
    global:
      - TWINE_USERNAME=joy.merwin

  #matrix:
  #  include:
  #    - os: osx
  #      language: generic
  #      env:
  #        - TOXENV=py27
  #        - OMP_NUM_THREADS=1
  #      script: travis_wait 45 tox -e ${TOXENV}

allow_failures:
  - os: osx

before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install gfortran; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then curl -sSL https://rvm.io/mpapis.asc | gpg --import -; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm get stable                 ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update                    ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall oclint     ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc               ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade python            ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 -m venv climt_venv     ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source climt_venv/bin/activate ; fi

install:
- python -m pip install -r requirements_dev.txt
- python -m pip install -U tox

jobs:
  include:
    - stage: light tests
      env: TOXENV=flake8 CLIMT_ARCH=Linux
      install:
          - python -m pip install -r requirements_dev.txt
          - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=cov CLIMT_ARCH=Linux
      install:
          - python -m pip install -r requirements_dev.txt
          - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=py36 CLIMT_ARCH=Linux
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      python: 3.5
      env: TOXENV=py35 CLIMT_ARCH=Linux
      install:
           - source ~/virtualenv/python3.5/bin/activate
           - python -m pip install -r requirements_dev.txt
           - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=py27 CLIMT_ARCH=Linux
      script:
          - tox -e ${TOXENV}
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp36-* cp35-* cp34-* cp27-manylinux1_i686'
      script:
        - |
          if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
          fi
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp36-* cp34-* cp27-* cp35-manylinux1_i686'
      script:
        - |
            if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
            fi
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp36-manylinux1_i686'
      script:
        - |
            if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
            fi
    #- stage: wheels
    #  os: osx
    #  language: generic
    #  env: CLIMT_ARCH=Darwin CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp36-manylinux1_i686'
    #  script:
    #    - |
    #        if [[ $TRAVIS_TAG ]]; then
    #        python -m pip install cibuildwheel
    #        travis_wait 50 cibuildwheel --output-dir wheelhouse
    #        python -m pip install twine
    #        python -m twine upload wheelhouse/*.whl
    #        fi


deploy:
  provider: pypi
  distributions: sdist
  user: joy.merwin
  password:
    secure: 1wi2TpypmHwaF1ouioEDTTVtxpCTm3x3dHCembq0S91lk7dP81BrPM+IIO4oEmeVRynp3Urd0Xfi0aigtewRlZZsh+F/iTUCLHtA4iQJqvCscBf3b0oaX6xKkbV9N7VxtwtLnbqYu8UTEgKsaaQnQhCvZGi85esZ1kS8rF412zYkhUqRARP5qIuLn0haY5TF6GSaNnclf/Jh+AyeZ/B8fHKiYcpv6KEqqw6r9HehOVxTNhMQcvkkxdGsGnF4+T8Z8g3IDfwVyCZLCEqtGZpjJ2B1S3541hCkbwJ6kV/ulmyD3EbawxS0VP9Gp1rB+TbEifdpzgWXCGE9davRNhD6zzbgeL+eq/+YN0l4OAv96iR+MJvBt0gOiSAIAf+iZu6CodYVtZbo8UjLlcEd1/tAr4HoQHCFHWD89VZF9+a+6p+YiS4zqgNhbkiqdpgJllU1YKyez2VT+rulDLrt4db2oSlofjcE8iT6nhNFmsh1hWetyP5AqzTLq79hWSCoaZHQwnP9OFGicLIL4KJCN7Q0qRUHikqSdeuv0/ku2vxKM8UrPZIp+7iDpuK7zScYaTiul15XoXckNUH0IqWVxlXonfYR6pnhmwdwcPo7ZvDhtTYQft7zWdGHu+hvm5DRQeyKoOyRnxQgluP6bUmJSFw/5N2pC55f4SQ1PEhJkcbdvZQ=
  on:
    tags: true
    repo: CliMT/climt
    condition: "$TOXENV == py27"
notifications:
  email:
    recipients:
    - mcgibbon@uw.edu
    - joy.monteiro@misu.su.se
